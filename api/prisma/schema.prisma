generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid()) @db.Uuid
  email     String     @unique
  name      String
  age       Int?

  matchLinks  MatchParticipant[]
  authoredFeedback  Feedback[] @relation("FeedbackAuthor")
  receivedFeedback  Feedback[] @relation("FeedbackSubject")

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Match {
  id            String    @id @default(uuid()) @db.Uuid
  
  reason        MatchReason 
  status        Status
  
  participants MatchParticipant[]

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

  enum MatchReason {
    INTERESTS
    CAREER_GOALS
    MENTORSHIP
  }

  enum Status {
    SUGGESTED
    ACCEPTED
    REJECTED
  }

model MatchParticipant {
  matchId   String   @db.Uuid
  userId    String   @db.Uuid
  
  createdAt DateTime @default(now())

  match   Match @relation(fields: [matchId], references: [id])
  user    User  @relation(fields: [userId], references: [id])

}

model Feedback {
  id              String           @id @default(uuid())  @db.Uuid
  user            User             @relation("FeedbackAuthor", fields: [userId], references: [id])
  userId          String           @db.Uuid

  matchedUser     User           @relation("FeedbackSubject", fields: [matchedUserId], references: [id])
  matchedUserId   String           @db.Uuid

  matchId         String           @db.Uuid
  match           Match            @relation(fields: [matchId], references: [id])

  reason          MatchReason
  rating          Int
  comment         String?

  createdAt       DateTime    @default(now())
}
